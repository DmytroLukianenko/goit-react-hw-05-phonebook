{"version":3,"sources":["components/ContactList/Contact.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/ContactForm/ContacForm.js","components/ContactList/ContactList.js","components/ContactList/Contact.js","components/Container/Container.js","components/Filter/Filter.js","components/Section/Section.js","components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleSubmit","e","preventDefault","formRefs","currentTarget","trim","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","length","blur","props","onSubmit","setState","handleChange","value","this","className","styles","form","addField","type","placeholder","onChange","newestOnTop","rtl","pauseOnFocusLoss","CSSTransition","in","timeout","classNames","appear","unmountOnExit","btn","Component","ContactList","contacts","deleteHandler","TransitionGroup","component","list","map","contact","id","phone","icon","onClick","data-id","Contact","Container","children","container","Filter","title","searchField","Section","section","App","filter","addContact","find","toLowerCase","newContact","uniqueId","handleFilter","getFilteredContacts","normalizedFilter","includes","deleteContact","deletedId","dataset","prevState","storageContacts","JSON","parse","localStorage","getItem","setItem","stringify","filteredContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1cfe1082.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__3MB6R\",\"icon\":\"Contact_icon__3bNws\",\"name\":\"Contact_name__g9a-N\",\"phone\":\"Contact_phone__2Le7g\",\"btn\":\"Contact_btn__3mwpT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2CdeE\",\"addField\":\"ContactForm_addField__339qT\",\"btn\":\"ContactForm_btn__2ohUy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__1Xxrv\",\"title\":\"Filter_title__1bEwk\",\"searchField\":\"Filter_searchField__TI16Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1qTWn\",\"title\":\"Section_title__21Jx2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__10u4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1AL-6\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport '../Section/section.css'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { name, number } = this.state;\r\n        const formRefs = e.currentTarget;\r\n        if (name.trim() === '' || number.trim() === '') {\r\n            toast.error('ğŸ˜² Please fill all fields!', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            formRefs[formRefs.length - 1].blur();\r\n            return;\r\n        }\r\n        this.props.onSubmit(name.trim(), number.trim());\r\n        this.setState({ name: '', number: '' });\r\n        formRefs[formRefs.length - 1].blur();\r\n    };\r\n\r\n    handleChange = ({ currentTarget }) => {\r\n        this.setState({ [currentTarget.name]: currentTarget.value });\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n\r\n            <form className={styles.form} onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    <input\r\n                        className={styles.addField}\r\n                        type=\"text\"\r\n                        value={name}\r\n                        name=\"name\"\r\n                        placeholder=\"name\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        className={styles.addField}\r\n                        type=\"text\"\r\n                        value={number}\r\n                        name=\"number\"\r\n                        placeholder=\"xxxx-xx-xx\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <ToastContainer\r\n                        position=\"top-right\"\r\n                        autoClose={2000}\r\n                        hideProgressBar={false}\r\n                        newestOnTop\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover\r\n                    />\r\n                    <CSSTransition\r\n                        in={true}\r\n                        timeout={500}\r\n                        classNames='mainTitle'\r\n                        appear\r\n                        unmountOnExit\r\n                    >\r\n                        <button className={styles.btn} type=\"submit\">\r\n                            Add contact\r\n                        </button>\r\n                    </CSSTransition>\r\n                </label>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Contact } from './Contact';\r\nimport styles from './ContactList.module.css';\r\nimport { TransitionGroup } from 'react-transition-group';\r\n\r\n\r\nexport const ContactList = ({ contacts, deleteHandler }) => {\r\n    return (\r\n        <TransitionGroup component=\"ul\" className={styles.list}>\r\n            {contacts.map(contact =>\r\n\r\n                Contact({\r\n                    id: contact.id,\r\n                    name: contact.name,\r\n                    phone: contact.number,\r\n                    deleteHandler,\r\n                })\r\n            )}\r\n        </TransitionGroup>\r\n    );\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SmartphoneIcon from '@material-ui/icons/Smartphone';\r\nimport styles from './Contact.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './Contact.css'\r\n\r\nexport const Contact = ({ id, name, phone, deleteHandler }) => {\r\n    return (\r\n        <CSSTransition\r\n            key={id}\r\n            timeout={250}\r\n            classNames=\"contactList\"\r\n            unmountOnExit\r\n        >\r\n            <li key={id} className={styles.contact}>\r\n                <span className={styles.name}>\r\n                    <AccountBoxIcon className={styles.icon} />\r\n                    {name}\r\n                </span>\r\n\r\n                <span className={styles.phone}>\r\n                    <SmartphoneIcon className={styles.icon} />\r\n                    {phone}\r\n                </span>\r\n\r\n                <button className={styles.btn} onClick={deleteHandler} data-id={id}>\r\n                    Delete\r\n      </button>\r\n            </li>\r\n        </CSSTransition >\r\n    );\r\n}\r\n\r\nContact.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    phone: PropTypes.string.isRequired,\r\n    deleteHandler: PropTypes.func.isRequired,\r\n};\r\n\r\n","import styles from \"./Container.module.css\";\r\n\r\nexport const Container = ({ children }) => {\r\n    return <div className={styles.container}>{children}</div>;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nexport const Filter = ({ value, onChange }) => {\r\n    return (\r\n        <form className={styles.form}>\r\n            <label>\r\n                <span className={styles.title}>Find contacts by name</span>\r\n                <input\r\n                    className={styles.searchField}\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n            </label>\r\n        </form>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Section.module.css';\r\nimport './section.css'\r\n\r\nexport const Section = ({ title, children }) => {\r\n    return (\r\n        <section className={styles.section} >\r\n\r\n            <CSSTransition\r\n                in={true}\r\n                timeout={500}\r\n                classNames='mainTitle'\r\n                appear\r\n                unmountOnExit\r\n            >\r\n                <p className={styles.title}>{title}</p>\r\n            </CSSTransition>\r\n            {children}\r\n        </section >\r\n    );\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\nimport { v4 as uniqueId } from 'uuid';\r\nimport ContactForm from './ContactForm/ContacForm';\r\nimport { ContactList } from './ContactList/ContactList';\r\nimport { Container } from './Container/Container';\r\nimport { Filter } from './Filter/Filter';\r\nimport Section from './Section/Section';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\n// const initialState = [\r\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ];\r\n\r\nclass App extends Component {\r\n    state = {\r\n        contacts: [],\r\n        filter: '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        const storageContacts = JSON.parse(localStorage.getItem('contacts'));\r\n        if (storageContacts) {\r\n            this.setState({ contacts: storageContacts });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n\r\n    addContact = (name, number) => {\r\n        const { contacts } = this.state;\r\n\r\n        if (\r\n            contacts.find(\r\n                contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n            )\r\n        ) {\r\n            toast.error('ğŸ˜² Contact is already exist!', {\r\n                position: \"top-center\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            id: uniqueId(),\r\n            name,\r\n            number,\r\n        };\r\n\r\n        this.setState(({ contacts }) => ({\r\n            contacts: [...contacts, newContact],\r\n        }));\r\n    };\r\n\r\n    handleFilter = e => {\r\n        this.setState({ filter: e.currentTarget.value });\r\n    };\r\n\r\n    getFilteredContacts = () => {\r\n        const { contacts, filter } = this.state;\r\n        const normalizedFilter = filter.toLowerCase().trim();\r\n\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    };\r\n\r\n    deleteContact = e => {\r\n        const deletedId = e.currentTarget.dataset.id;\r\n\r\n        this.setState(prevState => ({\r\n            contacts: prevState.contacts.filter(contact => contact.id !== deletedId),\r\n        }));\r\n        e.currentTarget.blur();\r\n    };\r\n\r\n    render() {\r\n        const { contacts, filter } = this.state;\r\n        const filteredContacts = this.getFilteredContacts();\r\n\r\n        return (\r\n\r\n            <Container>\r\n\r\n                <Section title=\"PHONEBOOK\">\r\n                    <ContactForm onSubmit={this.addContact} />\r\n                </Section>\r\n                <ToastContainer\r\n                    position=\"top-center\"\r\n                    autoClose={2000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n                <Section title=\"Contacts\">\r\n                    <Filter value={filter} onChange={this.handleFilter} />\r\n                    {filter.trim() ? (\r\n                        <ContactList\r\n                            contacts={filteredContacts}\r\n                            deleteHandler={this.deleteContact}\r\n                        />\r\n                    ) : (\r\n                            <ContactList\r\n                                contacts={contacts}\r\n                                deleteHandler={this.deleteContact}\r\n                            />\r\n                        )}\r\n                </Section>\r\n\r\n            </Container >\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n    // <React.StrictMode>\r\n    <App />,\r\n    // </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}